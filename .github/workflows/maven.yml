name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # - run: mkdir staging && cp target/*.jar staging
    # - uses: actions/upload-artifact@v4
    #   with:
    #     name: Package
    #     path: staging
    
    - name: Login to Aliyun Docker Registry
      uses: docker/login-action@v3
      with:
        registry: registry.cn-hangzhou.aliyuncs.com
        username: ${{ secrets.ALIYUN_REGISTRY_USER }}
        password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
            registry.cn-hangzhou.aliyuncs.com/michael_hy/myapp:${{ github.sha }}
            registry.cn-hangzhou.aliyuncs.com/michael_hy/myapp:latest
    
    # - name: Deploy to EC2
    #   uses: appleboy/ssh-action@v2.0.0
    #   with:
    #     host: ec2-13-250-106-33.ap-southeast-1.compute.amazonaws.com
    #     username: ${{ secrets.EC2_USERNAME }}
    #     key: ${{ secrets.EC2_SSH_KEY }}
    #     script: |
    #       echo ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} | docker login --username ${{ secrets.ALIYUN_REGISTRY_USER }} --password-stdin registry.cn-hangzhou.aliyuncs.com
    #       sudo docker stop my-app || true
    #       sudo docker rm my-app || true
    #       sudo docker pull registry.cn-hangzhou.aliyuncs.com/michael_hy/myapp:latest
    #       sudo docker run -d --name my-app -p 8080:8080 registry.cn-hangzhou.aliyuncs.com/michael_hy/myapp:latest
    #       sudo docker run -d --name my-app -p 8080:8080 605134463672.dkr.ecr.ap-southeast-1.amazonaws.com/michael_hy/myapp:latest

